{"version":3,"file":"static/js/180.3994241f.chunk.js","mappings":"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","sources":["components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","../node_modules/@chakra-ui/layout/src/center.tsx"],"sourcesContent":["import { useState, useId } from 'react';\nimport { Button, FormControl, FormLabel, Input, Box, Center} from '@chakra-ui/react'\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n}\n\nconst SignupForm = ({onSubmit}) => {\n  \n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const { name, email, password } = state;\n\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const handleChange = ({target}) => {\n    const { name, value } = target;\n    setState({...state, [name]: value})\n  }\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(state);\n    setState({ ...INITIAL_STATE })\n    \n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl w={400} isRequired bg='white' p=\"40px 30px 20px\"  border='1px solid teal' borderRadius='15px' >\n      <Box mb='10px'>\n        <FormLabel htmlFor={nameId} >Name:</FormLabel>\n          <Input onChange={handleChange} value={name} id={ nameId} type=\"text\" name=\"name\" maxW='360px'/>\n      </Box>\n      <Box mb='10px'>\n        <FormLabel htmlFor={emailId}>Email:</FormLabel>\n        <Input onChange={handleChange} id={emailId} value={email} type=\"text\" name=\"email\" maxW='360px' />\n      </Box>\n      <Box mb='15px'>\n        <FormLabel htmlFor={passwordId}>Password:</FormLabel>\n          <Input onChange={handleChange} id={passwordId} value={password} type=\"password\" name=\"password\" maxW='360px' />\n        </Box>\n        <Center><Button type='submit' colorScheme='teal' >SignUp</Button></Center>\n        \n        </FormControl>\n    </form>\n  )\n}\n\nexport default SignupForm;","import SignupForm from \"../../components/SignupForm/SignupForm\"\nimport {  useDispatch, useSelector } from \"react-redux\"\nimport {signup} from '../../redux/auth/auth-operaions'\nimport {selectAuthLoading, selectAuthError, selectIsLogin, selectUser} from '../../redux/auth/auth-selectors'\n\n\n\n\nconst SignupPage = () => {\n  const loading = useSelector(selectAuthLoading);\n  const error = useSelector(selectAuthError);\n  const isLogin = useSelector(selectIsLogin);\n  const { name } = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const handleSignup = (body) => {\n    dispatch(signup(body))\n  }\n  \n  return (<>\n    <h1>Сторінка Реєстрації</h1>\n    <SignupForm onSubmit={handleSignup } />\n    {loading && <p>...loading</p>}\n    {error && <p>Помилка: {error}</p>}\n    {isLogin && <h3>Вітаємо { name}</h3>}\n        </> )\n}\n\nexport default SignupPage","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","nameId","useId","emailId","passwordId","handleChange","_ref2","target","value","_defineProperty","_jsx","e","preventDefault","children","_jsxs","FormControl","w","isRequired","bg","p","border","borderRadius","Box","mb","FormLabel","htmlFor","Input","onChange","id","type","maxW","Center","Button","colorScheme","loading","useSelector","selectAuthLoading","error","selectAuthError","isLogin","selectIsLogin","selectUser","dispatch","useDispatch","_Fragment","SignupForm","body","signup","chakra","baseStyle","display","alignItems","justifyContent","displayName","centerStyles","horizontal","insetStart","transform","vertical","top","both","forwardRef","props","ref","axis","rest","div","__css","position"],"sourceRoot":""}