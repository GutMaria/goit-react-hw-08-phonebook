{"version":3,"file":"static/js/643.0ead6b4b.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useState, useId} from 'react';\n\nimport { Box, Button, FormControl, FormLabel, Input, Center} from '@chakra-ui/react'\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n}\n\nconst LoginForm = ({onSubmit}) => {\n  \n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const { email, password } = state;\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const handleChange = ({target}) => {\n    const { name, value } = target;\n    setState({...state, [name]: value})\n  }\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(state);\n  }\n\n  return (<form onSubmit={handleSubmit} style={{ maxWidth: '360px' }}>\n    <FormControl maxW={[180, 300]} width='100%' isRequired bg='white'  p=\"40px 30px 20px\"  border='1px solid teal' borderRadius='15px'>\n        <Box mb='10px' >\n        <FormLabel htmlFor={emailId}>Email:</FormLabel>\n        <Input onChange={handleChange} id={emailId} value={email} type='email' name=\"email\"  maxW={[150, 270]} />\n      </Box>\n      <Box mb='20px'>\n        <FormLabel htmlFor={passwordId}>Password:</FormLabel>\n        <Input onChange={handleChange} id={passwordId} value={password} type=\"password\" name=\"password\" maxW={[150, 270]} />\n      </Box>\n      <Center><Button type='submit' colorScheme='teal' >\n    Log in\n  </Button></Center>\n      \n    </FormControl>\n    </form>\n  )\n}\n\nexport default LoginForm;","import LoginForm from \"../../components/LoginForm/LoginForm\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\";\nimport {login, clearAuthError} from '../../redux/auth/auth-operaions'\nimport { selectAuthLoading, selectAuthError, selectIsLogin } from '../../redux/auth/auth-selectors'\nimport { CircularProgress, Center, Heading, Box } from '@chakra-ui/react'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nNotify.init({width: '300px',\nposition: 'center-top',  });\n\n\nconst LoginPage = () => {\n  const loading = useSelector(selectAuthLoading);\n  const error = useSelector(selectAuthError);\n  const isLogin = useSelector(selectIsLogin);\n\n  const dispatch = useDispatch();\n\n  const handleLogin = (body) => {\n    dispatch(login(body))\n  }\n\n  if(isLogin) {\n        return <Navigate to=\"/contacts\" /> \n  }\n  \n  if (error) {\n    Notify.failure('Oops, something went wrong, please try again');\n      dispatch(clearAuthError());\n    }\n\n\n\n  \n  return (<Box mt={[\"30px\", '50px'] }>\n    <Heading size='lg' mt='0px' >Please log in</Heading>\n    <LoginForm onSubmit={handleLogin } />\n    {loading && <Center h='100px'><CircularProgress isIndeterminate color='teal'/></Center>}\n    {/* {error && (Notify.failure('Oops, something went wrong, please try again')) } */}\n        </Box> )\n}\n\nexport default LoginPage"],"names":["INITIAL_STATE","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","emailId","useId","passwordId","handleChange","_ref2","target","name","value","_defineProperty","_jsx","e","preventDefault","style","maxWidth","children","_jsxs","FormControl","maxW","width","isRequired","bg","p","border","borderRadius","Box","mb","FormLabel","htmlFor","Input","onChange","id","type","Center","Button","colorScheme","Notify","position","loading","useSelector","selectAuthLoading","error","selectAuthError","isLogin","selectIsLogin","dispatch","useDispatch","Navigate","to","clearAuthError","mt","Heading","size","LoginForm","body","login","h","CircularProgress","isIndeterminate","color"],"sourceRoot":""}