{"version":3,"file":"static/js/643.ef2f788b.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","../node_modules/@chakra-ui/layout/src/center.tsx"],"sourcesContent":["import { useState, useId} from 'react';\n\nimport { Box, Button, FormControl, FormLabel, Input, Center} from '@chakra-ui/react'\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n}\n\nconst LoginForm = ({onSubmit}) => {\n  \n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const { email, password } = state;\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const handleChange = ({target}) => {\n    const { name, value } = target;\n    setState({...state, [name]: value})\n  }\n\n\n  const handleSubmit = (e) => {\n    console.log('Клік на логін')\n    e.preventDefault();\n    onSubmit(state);\n    setState({ ...INITIAL_STATE })\n    \n  }\n\n  return (<form onSubmit={handleSubmit}>\n    <FormControl  w={400} isRequired bg='white' p=\"40px 30px 20px\"  border='1px solid teal' borderRadius='15px'>\n      <Box mb='10px'>\n        <FormLabel htmlFor={emailId}>Email:</FormLabel>\n        <Input onChange={handleChange} id={emailId} value={email} type='email' name=\"email\" maxW='360px' />\n      </Box>\n      <Box mb='20px'>\n        <FormLabel htmlFor={passwordId}>Password:</FormLabel>\n        <Input onChange={handleChange} id={passwordId} value={password} type=\"password\" name=\"password\" maxW='360px' />\n      </Box>\n      <Center><Button type='submit' colorScheme='teal' >\n    LOGIN\n  </Button></Center>\n      \n    </FormControl>\n    </form>\n  )\n}\n\nexport default LoginForm;","import LoginForm from \"../../components/LoginForm/LoginForm\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\";\nimport {login} from '../../redux/auth/auth-operaions'\nimport {selectAuthLoading, selectAuthError, selectIsLogin, selectUser} from '../../redux/auth/auth-selectors'\n\n\n\n\nconst LoginPage = () => {\n  const loading = useSelector(selectAuthLoading);\n  const error = useSelector(selectAuthError);\n  const isLogin = useSelector(selectIsLogin);\n  const { name } = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const handleLogin = (body) => {\n    dispatch(login(body))\n  }\n\n  if(isLogin) {\n        return <Navigate to=\"/contacts\" /> \n    }\n  \n  return (<>\n    <h1>Сторінка LogIn</h1>\n    <LoginForm onSubmit={handleLogin } />\n    {loading && <p>...loading</p>}\n    {error && <p>Помилка: {error}</p>}\n    {isLogin && <h3>Вітаємо { name}</h3>}\n        </> )\n}\n\nexport default LoginPage","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n"],"names":["INITIAL_STATE","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","emailId","useId","passwordId","handleChange","_ref2","target","name","value","_defineProperty","_jsx","e","console","log","preventDefault","children","_jsxs","FormControl","w","isRequired","bg","p","border","borderRadius","Box","mb","FormLabel","htmlFor","Input","onChange","id","type","maxW","Center","Button","colorScheme","loading","useSelector","selectAuthLoading","error","selectAuthError","isLogin","selectIsLogin","selectUser","dispatch","useDispatch","Navigate","to","_Fragment","LoginForm","body","login","chakra","baseStyle","display","alignItems","justifyContent","displayName","centerStyles","horizontal","insetStart","transform","vertical","top","both","forwardRef","props","ref","axis","rest","div","__css","position"],"sourceRoot":""}